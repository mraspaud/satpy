{"project": "satpy", "project_url": "https://github.com/pytroll/satpy", "show_commit_url": "#", "hash_length": 8, "revision_to_hash": {"1687": "17a47c6c392ec6db138e8a8ff4f5f343f0df52d5", "1756": "811329108403f7730a9a62d23805c2ba1955d2d4", "1772": "17dad55556cb947e2c6732f247df56f3d90d13f3", "1814": "c8d07c9cf01a95f70ba0f16732e49cf3485553cb", "1899": "239726f8b3a18d9a882214147d5b1ce31a8b7963", "1906": "400c82165b4aee487ece76e7e1820a8c5665c812", "1946": "40408a62efa9c031f056042ddf26a1aa92604f7f", "1962": "c309a4afbcdb1339d6bde6e8d4cca699787c01ae", "1980": "b00044673d8079e338f8a05b3b1d91fa48fb6d54", "2088": "ee05e166b36263972ed23c21872603168c142baf", "2118": "da5894b47adc7086b19aba2a35dd750cb464295b", "2144": "fc16aef97b094651130b7a493bc1d376ad01d8e9", "2174": "8f2bc5e0cdb72e5ad03c1a84394f4014856abc9e", "2211": "e814df5b107b3c0686ff7d7474b9ff0652c498f9", "2281": "fb0d4fc3f1c0051aab076fde24a4325c51f09ebe", "2373": "f540f3222350fb84f76a026b7646b502cd3dbdcb", "2391": "522e21bb6d498577f15232dce09cff0f32a4b15f", "2492": "f54de07fd978e928c3e254916ebb726206b1de3f", "2543": "434c584f790d9e5579e060a5ecf172fedbb65eca", "2567": "5d85bb9303dc30acdf4e73d3c09fcdcfbe333423", "2602": "12ae7b202a70873bf59df24ffc38d9eb37130b7d", "2609": "ee8934aa846a22aead11a84492666ce9fdf7cea2", "2650": "06248d5e4fee1efad3ac8e6cff6d46657639a6d0", "2772": "32d0ae09d197d8937c8cb9f90c2bb229512195a2", "2965": "b574b1f755a5e63a6b6760ce6e425e8e105b0aae", "3002": "43c53aeeae6315b865a8afd231e78fe4ef265708", "3037": "951d21033b1187f4d63378739a9ec15886b9ae76", "3052": "72d493b428d17c96c9c081f2002ce254e2ec13ad", "3242": "8786bbbb7c14d67dfb1a8695a900a86672a9b4ea", "3450": "5da5f1b346104dc0b4912f7fd7ff874c4982dd93", "3488": "4d29c26dc33c2021a4c6af15e840d5f04fb091e7", "3602": "60e83f5bb8f9c4e061e4fa74a6455967c7c7bbf2", "3686": "4b5abdbecbe3fde8a50666273dcf94284e87be67", "3729": "90e5643400d43f25a4f7a154946df33b811bfbc6", "3851": "69ec648f977b7485add66c5755c8f7d881112050", "4105": "087ffa8cb2eba1d08b4fa0e39ee7f2466ff97395", "4331": "2bfaf5ac8419adaff98bc707b9be9b9aae4dfd98", "4334": "621606d6a8f4b0506207963e9dc3a059094e1399", "4475": "ee1ee7deb9f7715a7d11cb32c6bdb6339986c08a", "4540": "a54decd8ee4f7aeb0c8d6aec33f48cd179ed2864", "4696": "40a0dcd91544a0785c47fd2c025dac8892718800", "4848": "ec0c189b82b9c979c37ff51f0281e767510dc6c1", "4874": "1849b1707ffc10ce427f68f6f1cb90529140bc8a", "4922": "8ccdaa9a3c3633fe225c52c5ec2e014ab4c7eb01", "5035": "1bfbac65f6c0e247f500eda59b1c3ae0d776acae", "5040": "fd357db44ca9d768adee89366d8cec87f78a720f", "5172": "cd65262ba1ba895ee28ea41f0a5a5ae043370c5a", "5437": "aa959a63ccdf537a73edd0fd45be28bcae232bb6", "5553": "3cc29bbbb21658be3f3e3ee90b10125b5df49fd4", "5831": "6d7768b2ea1a1ab98c2b7ef5df2527e4313e6f3b", "5862": "5061c2b83a0538977f2a9d804a6e67b4d4673a9a", "6048": "e7c56ca627f4ae29d449a10b55bb3643976d6d2a", "6055": "30073913cec9d5ece9c6290c0a78c1b1158324c9", "6368": "be0dd6183e78e2e985f46718c7123dba646653b2", "6420": "84c74be6836ae5a227c6d22a1e7a05d7c86ff345", "6583": "33506e2c52c47afda11f4987456bb04b28fdd390", "6718": "2e77f712528c9bc63629a7f87ed8c61153a353d2", "6779": "2ce07c0b1f477e9cd400a4e9b7504f36a08cc1cd", "6781": "446af3ad7c21fac86bc0c8a8ff2f7a27bb91700f", "6974": "5da8aadbe09d30a8c1e7cbdab6e6d92c1538d58b", "7028": "836c657d4ede4363a344748e2c57c7b36f522757", "7075": "e10908a6973a77f98a76a04e16b6d812e1c8a5ce", "7171": "1125e6eb1bcf4d62950da53e8e48a9f100bcad44", "7224": "3128bf5d4c736f3475fec6b3f6552b9e4b03de12", "7442": "367d7251509f0c9be5a0692f3e3e2a9e4b87b2fc", "7542": "c0c869f8056687733bfdae794369e3400df92224", "7637": "f933546a349ce56ec83ae52a05fdf8fb170bd13e", "7692": "72038e45efde676ef32565396e809eb8cda3ba62", "7698": "480b6988e0908548b1c2301784551ec938bab510", "7809": "e68e85849687dd442b6fea5598d28d26c75e8970", "7905": "5ee05e8e712f2bad31eabeba2a03de1852e08cc9", "7938": "d8d5e9e3dbf92dad5139ae60e54acc7e3a6ffbd2", "8132": "737617cdde58a4179beb5e1d286271f23e0863d3", "8220": "8427877a2e4ac1223bde58233b16829756a6b2ce", "8248": "9edad60a923f8d0ec609b8232c59d2161d04d5e3", "8259": "d7fbbdf00d40755b3ed82832fd3362ed19f8581a", "8295": "0d4ef0063500e3cb020a0cc8eb70476c86f281ed", "8381": "f24a87436faf630f9e79660daac26d8a8087bc5c", "8473": "2969c141ff956442878c6e72ca39939591d71d2e", "8582": "288c0bc397546bcbb633b38766b73abcd0c8580c", "8598": "316706bb903eff322c011780517d35b70637a847", "8639": "88f0dcb315dc8935c0336a9665c0d5b3fdfe8b49", "8687": "f6fe88f9611322ebcc21309282da567fa784adeb", "8698": "fac76a747f76e29f95711891d3d9478bcde30977", "8705": "cefc56b8a5337b1dbc4d4301d85ce65074b6cd68", "8709": "95ec89aca35a0da3fabb112f72605fab7f4dc27c", "8711": "7aa706b7485475da1d4ed9e98dde6ac01d916d22", "8713": "cb3e1970d1ea05101b76dff990434e4114854dfc", "8715": "398445320973c64477e94e3f6dee43d5924d0a55", "8726": "f9a8f8d89f5f7b6c5868db61070662d772a5442d", "8728": "9257378761d6ac6c826719c33455dd1dee9fc7c9", "8733": "b564e0c390dcaf09598dfa96048ea7cc738f1471", "8744": "eb2036ed7edf9c82d554c68437ed20ea28012439", "8753": "cec1f0e1445da70b2bb5df2ec8cb723bdc86eee1", "8754": "6df2f107ae29295ea1bd256affe9c099482c1e36", "8756": "e72a3f029e6a94b55f48d894cbad20b1f4ef0562", "8757": "05c033ef50e5aa07baaa290868e00d685ddade59", "8764": "3bbc79df5353d301b53f6ad959807f7a62b1997a", "8769": "88575cc84f48e0d35a3457a1a8994ee4a72f130c", "8770": "914943054d6e85ea45607268cae07e7eec36125e", "8776": "31d042f10e3cbf70d1ba735cc7e41b19bfd505f8", "8780": "2a1110e8a91f771b74c451baff670180fa52f31f", "8790": "153d8685699f546e6a4f91d06a2327b8efed651d", "8793": "590c7c3ba72c11a26ae376b6605c17803e0ae457", "8798": "62c0e83e40cef01e3d9a566e76e25b05a08e6ba6", "8806": "59903ae1d79e3878826c06edc39eca9dd8b2b8ad", "8808": "e0f8371e658a4787372d70751e44c17d07481398", "8809": "4435f81b49a9aca9d5eea03d541928482ae5f695", "8814": "290e0e60b08aedd42fc0ec91167f5d7878dd918b", "8815": "378a2c563f647a7bb7ce74b417f288d0738d2762", "8816": "09ce35560eeec03e705529b824502e0e0eb1800b", "8817": "e9f788e870619eb6b116bd23e357db2d0594d612", "8832": "88938ab8e0eb2b2f6ae89665733b7e2281720fce", "8852": "aa149512000ad7e7e12f331a42d504794bea96a9", "8855": "25993ff54199a18dcf671305624da2020fb60903", "8878": "c568088c2e982161ec7a4e7f1afdfc8bff50f60e", "8879": "0a82ff0abc53b26d914e9a37d2150f6fa58d4966", "8880": "770ce612b3a57d18ebdac2e1432ce6c645a37de3", "8883": "51f2936b8d194c8719ccc1c43f9c1f65e2428fef", "8884": "aab24d493424504abbe427615a38c5c8d496c924", "8891": "217c6e2c58ce47fb6c11f04c234950af5fe5aded", "8907": "236e6d51bb0246d7c10d5a5bf708b0bb2a8e98a0", "8908": "a50246a26de27cd1328467a2e4d935f2bd4b2109", "8909": "f4fb747ec9466e58cfc22d5a80979b2925256f8c", "8912": "1289aa3e4fc454fcc63028cc99161effcfbccb32", "8929": "fbcf8599ca574f174d99ba35d1e737b4c0ea6e23", "8930": "2d1fefe132566a20ae25ab3b55c1f066c32b8ded", "8931": "7c62d080df6d8857086bc3229cf0a514ec44f07d", "8936": "e62eb9d60add9e5c1bb4ee1074bf189b5dcd099b", "8939": "a2cfa24adc6b159efa6e5e30589cddf069099931", "8944": "cf546ba0feb47470d794e0fe862ddf2d40661a5e", "8955": "f7afc2e449e268ecb54c0c74a20a5b4af57d6222", "8956": "8a85d3b1e3e8b18ee60bde58ebe4d2ead4605251", "8960": "716ade2eafde6fa9a046bc4e94bd86d5213f5925", "8961": "b415e9beae7b492aaca9e9f9e134eecd24ab1eb0", "8974": "96adc4dadb7c0dc21d5cd49d737a9b026ec7e121", "8978": "7b8eb8d48b7f290f08797cc5f1508b7cccdb35ca", "8983": "b2af59a56749163814a8f94050c3fe7a92c9bada", "8986": "f736315178ebeb26a15a48302251cf39534ed143", "9030": "4d3462595ee5d78ccd2bab2b6a0714fe722f4f91", "9074": "07a87af496fafca1bcb061824f532a01ab927f48", "9077": "2a764ab60ed7d085e633cee9251ef57582b1cdaf", "9078": "8d4abe6adf0473fafb643d2ba2c8eba10afe94e9", "9082": "2abebf1ea4cc631db6a5fd7ce569180c2d3dde36", "9095": "13d61e8327c0599a346ca96f2e610eb37b15ac88", "9099": "a76c17e8ce7ee8e26b459bd2370158e2d82029f4", "9101": "983961bfb06cdb80ae9dcebd7ad86fe6cca13382"}, "revision_to_date": {"1687": 1479762350000, "1756": 1481182542000, "1772": 1481663495000, "1814": 1484594622000, "1899": 1487689450000, "1906": 1487700900000, "1946": 1488233446000, "1962": 1488919577000, "1980": 1490620883000, "2088": 1492540580000, "2118": 1493062702000, "2144": 1495478074000, "2174": 1502783866000, "2211": 1503995184000, "2281": 1505762799000, "2373": 1508871794000, "2391": 1510593731000, "2492": 1513006858000, "2543": 1513714590000, "2567": 1513886429000, "2602": 1515662906000, "2609": 1515704781000, "2650": 1516369537000, "2772": 1518468782000, "2965": 1521554071000, "3002": 1523581161000, "3037": 1524150653000, "3052": 1524410646000, "3242": 1526304151000, "3450": 1530022768000, "3488": 1530546608000, "3602": 1534714415000, "3686": 1535057572000, "3729": 1536625312000, "3851": 1538239439000, "4105": 1543014884000, "4331": 1545404499000, "4334": 1545924360000, "4475": 1548694021000, "4540": 1550241761000, "4696": 1552941741000, "4848": 1554838785000, "4874": 1555085777000, "4922": 1556242710000, "5035": 1557500125000, "5040": 1557517114000, "5172": 1558556863000, "5437": 1560890707000, "5553": 1562247301000, "5831": 1569929732000, "5862": 1570551020000, "6048": 1573054277000, "6055": 1573141025000, "6368": 1577692955000, "6420": 1578678322000, "6583": 1582652065000, "6718": 1585133523000, "6779": 1585929081000, "6781": 1586203874000, "6974": 1589306899000, "7028": 1590408694000, "7075": 1591113932000, "7171": 1591812130000, "7224": 1594310170000, "7442": 1596520574000, "7542": 1598030282000, "7637": 1599663906000, "7692": 1600418756000, "7698": 1600434410000, "7809": 1603435722000, "7905": 1605191651000, "7938": 1605519136000, "8132": 1607152883000, "8220": 1608144715000, "8248": 1609796256000, "8259": 1609988057000, "8295": 1611584818000, "8381": 1613145744000, "8473": 1614239926000, "8582": 1615358398000, "8598": 1615823335000, "8639": 1616435770000, "8687": 1616747285000, "8698": 1617669001000, "8705": 1618315755000, "8709": 1618411862000, "8711": 1618580131000, "8713": 1618782016000, "8715": 1618844994000, "8726": 1619024431000, "8728": 1619028999000, "8733": 1619104163000, "8744": 1619537042000, "8753": 1619793363000, "8754": 1620057171000, "8756": 1620140391000, "8757": 1620151562000, "8764": 1620367221000, "8769": 1620635333000, "8770": 1620635772000, "8776": 1620724909000, "8780": 1620736137000, "8790": 1620993227000, "8793": 1621097358000, "8798": 1621266734000, "8806": 1621353167000, "8808": 1621356127000, "8809": 1621361970000, "8814": 1621365693000, "8815": 1621366994000, "8816": 1621382401000, "8817": 1621383598000, "8832": 1621451780000, "8852": 1622045605000, "8855": 1622056498000, "8878": 1622554180000, "8879": 1622554270000, "8880": 1622556372000, "8883": 1622559098000, "8884": 1622559125000, "8891": 1622569030000, "8907": 1622629403000, "8908": 1622629576000, "8909": 1622630320000, "8912": 1622639336000, "8929": 1622832815000, "8930": 1622833221000, "8931": 1622835648000, "8936": 1623041353000, "8939": 1623079900000, "8944": 1623172660000, "8955": 1623352203000, "8956": 1623352268000, "8960": 1623417138000, "8961": 1623417161000, "8974": 1623738482000, "8978": 1623772834000, "8983": 1624380616000, "8986": 1624979766000, "9030": 1626449127000, "9074": 1627022513000, "9077": 1627032529000, "9078": 1627034475000, "9082": 1627041929000, "9095": 1627583427000, "9099": 1627595688000, "9101": 1628002733000}, "params": {"arch": ["x86_64"], "cpu": ["Intel(R) Xeon(R) Gold 6161 CPU @ 2.20GHz"], "machine": ["miles.pytroll.ewc"], "num_cpu": ["8"], "os": ["Linux 4.15.0-65-generic"], "ram": ["16GB"], "python": ["3.8"], "branch": ["main"]}, "graph_param_list": [{"arch": "x86_64", "cpu": "Intel(R) Xeon(R) Gold 6161 CPU @ 2.20GHz", "machine": "miles.pytroll.ewc", "num_cpu": "8", "os": "Linux 4.15.0-65-generic", "ram": "16GB", "python": "3.8", "branch": "main"}], "benchmarks": {"ahi_hsd_benchmarks.HimawariHSD.peakmem_load_one_channel": {"code": "class HimawariHSD:\n    def peakmem_load_one_channel(self):\n        \"\"\"Check peak memory usage of loading one channel.\"\"\"\n        self.compute_B01()\n\n    def setup(self):\n        \"\"\"Set up the benchmarks.\"\"\"\n        import satpy\n        self.data_files = get_filenames(self.subdir)\n        satpy.CHUNK_SIZE = 2048\n\n    def setup_cache(self):\n        \"\"\"Fetch the data files.\"\"\"\n        try:\n            from satpy.demo import download_typhoon_surigae_ahi\n            download_typhoon_surigae_ahi(channels=[1, 2, 3, 4], segments=[4])\n        except ImportError:\n            assert len(get_filenames(self.subdir)) == 4\n        download_rsr()\n        download_luts(aerosol_type='rayleigh_only')", "name": "ahi_hsd_benchmarks.HimawariHSD.peakmem_load_one_channel", "param_names": [], "params": [], "setup_cache_key": "/home/mraspaud/src/satpy/benchmarks/ahi_hsd_benchmarks.py:36", "timeout": 600, "type": "peakmemory", "unit": "bytes", "version": "3b3c7f134a1911a433bb7a006c45fef8f92951882ef400d61d57f7aaee4a1782"}, "ahi_hsd_benchmarks.HimawariHSD.peakmem_load_true_color": {"code": "class HimawariHSD:\n    def peakmem_load_true_color(self):\n        \"\"\"Check peak memory usage of the generation of true_color.\"\"\"\n        self.compute_true_color()\n\n    def setup(self):\n        \"\"\"Set up the benchmarks.\"\"\"\n        import satpy\n        self.data_files = get_filenames(self.subdir)\n        satpy.CHUNK_SIZE = 2048\n\n    def setup_cache(self):\n        \"\"\"Fetch the data files.\"\"\"\n        try:\n            from satpy.demo import download_typhoon_surigae_ahi\n            download_typhoon_surigae_ahi(channels=[1, 2, 3, 4], segments=[4])\n        except ImportError:\n            assert len(get_filenames(self.subdir)) == 4\n        download_rsr()\n        download_luts(aerosol_type='rayleigh_only')", "name": "ahi_hsd_benchmarks.HimawariHSD.peakmem_load_true_color", "param_names": [], "params": [], "setup_cache_key": "/home/mraspaud/src/satpy/benchmarks/ahi_hsd_benchmarks.py:36", "timeout": 600, "type": "peakmemory", "unit": "bytes", "version": "113fba820e6575fc715012fe93dc2a7fdb8a57a87d031bf9abab5ae8f768d5fb"}, "ahi_hsd_benchmarks.HimawariHSD.peakmem_save_true_color_to_geotiff": {"code": "class HimawariHSD:\n    def peakmem_save_true_color_to_geotiff(self):\n        \"\"\"Check peak memory usage of the generation and saving of true_color_nocorr.\"\"\"\n        self.save_true_color_nocorr_as_geotiff()\n\n    def setup(self):\n        \"\"\"Set up the benchmarks.\"\"\"\n        import satpy\n        self.data_files = get_filenames(self.subdir)\n        satpy.CHUNK_SIZE = 2048\n\n    def setup_cache(self):\n        \"\"\"Fetch the data files.\"\"\"\n        try:\n            from satpy.demo import download_typhoon_surigae_ahi\n            download_typhoon_surigae_ahi(channels=[1, 2, 3, 4], segments=[4])\n        except ImportError:\n            assert len(get_filenames(self.subdir)) == 4\n        download_rsr()\n        download_luts(aerosol_type='rayleigh_only')", "name": "ahi_hsd_benchmarks.HimawariHSD.peakmem_save_true_color_to_geotiff", "param_names": [], "params": [], "setup_cache_key": "/home/mraspaud/src/satpy/benchmarks/ahi_hsd_benchmarks.py:36", "timeout": 600, "type": "peakmemory", "unit": "bytes", "version": "66a0a7d08464f893ce186dcac7be6b8d9fdf67116315c8ea84172bd1060d275d"}, "ahi_hsd_benchmarks.HimawariHSD.time_load_one_channel": {"code": "class HimawariHSD:\n    def time_load_one_channel(self):\n        \"\"\"Time the loading of one channel.\"\"\"\n        self.compute_B01()\n\n    def setup(self):\n        \"\"\"Set up the benchmarks.\"\"\"\n        import satpy\n        self.data_files = get_filenames(self.subdir)\n        satpy.CHUNK_SIZE = 2048\n\n    def setup_cache(self):\n        \"\"\"Fetch the data files.\"\"\"\n        try:\n            from satpy.demo import download_typhoon_surigae_ahi\n            download_typhoon_surigae_ahi(channels=[1, 2, 3, 4], segments=[4])\n        except ImportError:\n            assert len(get_filenames(self.subdir)) == 4\n        download_rsr()\n        download_luts(aerosol_type='rayleigh_only')", "min_run_count": 2, "name": "ahi_hsd_benchmarks.HimawariHSD.time_load_one_channel", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "setup_cache_key": "/home/mraspaud/src/satpy/benchmarks/ahi_hsd_benchmarks.py:36", "timeout": 600, "type": "time", "unit": "seconds", "version": "1d239868c050c2d208a28ef6ccc581e848df92df438d2ee1649adb2c93586e5d", "warmup_time": -1}, "ahi_hsd_benchmarks.HimawariHSD.time_load_true_color": {"code": "class HimawariHSD:\n    def time_load_true_color(self):\n        \"\"\"Time the loading of the generation of true_color.\"\"\"\n        self.compute_true_color()\n\n    def setup(self):\n        \"\"\"Set up the benchmarks.\"\"\"\n        import satpy\n        self.data_files = get_filenames(self.subdir)\n        satpy.CHUNK_SIZE = 2048\n\n    def setup_cache(self):\n        \"\"\"Fetch the data files.\"\"\"\n        try:\n            from satpy.demo import download_typhoon_surigae_ahi\n            download_typhoon_surigae_ahi(channels=[1, 2, 3, 4], segments=[4])\n        except ImportError:\n            assert len(get_filenames(self.subdir)) == 4\n        download_rsr()\n        download_luts(aerosol_type='rayleigh_only')", "min_run_count": 2, "name": "ahi_hsd_benchmarks.HimawariHSD.time_load_true_color", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "setup_cache_key": "/home/mraspaud/src/satpy/benchmarks/ahi_hsd_benchmarks.py:36", "timeout": 600, "type": "time", "unit": "seconds", "version": "6ccd4191351862b62fffd4d201ea4d9aa3870709f4e6bbe7c93eee1fe8afa0de", "warmup_time": -1}, "ahi_hsd_benchmarks.HimawariHSD.time_save_true_color_nocorr_to_geotiff": {"code": "class HimawariHSD:\n    def time_save_true_color_nocorr_to_geotiff(self):\n        \"\"\"Time the generation and saving of true_color_nocorr.\"\"\"\n        self.save_true_color_nocorr_as_geotiff()\n\n    def setup(self):\n        \"\"\"Set up the benchmarks.\"\"\"\n        import satpy\n        self.data_files = get_filenames(self.subdir)\n        satpy.CHUNK_SIZE = 2048\n\n    def setup_cache(self):\n        \"\"\"Fetch the data files.\"\"\"\n        try:\n            from satpy.demo import download_typhoon_surigae_ahi\n            download_typhoon_surigae_ahi(channels=[1, 2, 3, 4], segments=[4])\n        except ImportError:\n            assert len(get_filenames(self.subdir)) == 4\n        download_rsr()\n        download_luts(aerosol_type='rayleigh_only')", "min_run_count": 2, "name": "ahi_hsd_benchmarks.HimawariHSD.time_save_true_color_nocorr_to_geotiff", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "setup_cache_key": "/home/mraspaud/src/satpy/benchmarks/ahi_hsd_benchmarks.py:36", "timeout": 600, "type": "time", "unit": "seconds", "version": "36e867a7b4573dc203081d90682cac9d43a03b051a4b3c86e944c61ad675b464", "warmup_time": -1}, "seviri_hrit_benchmarks.SEVIRIHRIT.peakmem_load_one_channel": {"code": "class SEVIRIHRIT:\n    def peakmem_load_one_channel(self):\n        \"\"\"Check peak memory usage of loading one channel.\"\"\"\n        self.compute_vis006()\n\n    def setup(self):\n        \"\"\"Set up the benchmarks.\"\"\"\n        import satpy\n        self.data_files = get_filenames(self.subdir)\n        satpy.CHUNK_SIZE = 2048\n\n    def setup_cache(self):\n        \"\"\"Fetch the data files.\"\"\"\n        try:\n            from satpy.demo import download_seviri_hrit_20180228_1500\n            download_seviri_hrit_20180228_1500()\n        except ImportError:\n            assert len(get_filenames(self.subdir)) == 114\n        download_rsr()\n        download_luts(aerosol_type='rayleigh_only')", "name": "seviri_hrit_benchmarks.SEVIRIHRIT.peakmem_load_one_channel", "param_names": [], "params": [], "setup_cache_key": "/home/mraspaud/src/satpy/benchmarks/seviri_hrit_benchmarks.py:36", "timeout": 600, "type": "peakmemory", "unit": "bytes", "version": "6bf36f1008ac8846f7df4dbaed9185f53045ea9d196d3a08d22423b06fe61cf7"}, "seviri_hrit_benchmarks.SEVIRIHRIT.peakmem_load_overview": {"code": "class SEVIRIHRIT:\n    def peakmem_load_overview(self):\n        \"\"\"Check peak memory usage of the generation of overview.\"\"\"\n        self.compute_overview()\n\n    def setup(self):\n        \"\"\"Set up the benchmarks.\"\"\"\n        import satpy\n        self.data_files = get_filenames(self.subdir)\n        satpy.CHUNK_SIZE = 2048\n\n    def setup_cache(self):\n        \"\"\"Fetch the data files.\"\"\"\n        try:\n            from satpy.demo import download_seviri_hrit_20180228_1500\n            download_seviri_hrit_20180228_1500()\n        except ImportError:\n            assert len(get_filenames(self.subdir)) == 114\n        download_rsr()\n        download_luts(aerosol_type='rayleigh_only')", "name": "seviri_hrit_benchmarks.SEVIRIHRIT.peakmem_load_overview", "param_names": [], "params": [], "setup_cache_key": "/home/mraspaud/src/satpy/benchmarks/seviri_hrit_benchmarks.py:36", "timeout": 600, "type": "peakmemory", "unit": "bytes", "version": "87258fa70c97c76a92c4aef015a765b255528797f2a57414cafae5530dadc01e"}, "seviri_hrit_benchmarks.SEVIRIHRIT.peakmem_save_overview_to_geotiff": {"code": "class SEVIRIHRIT:\n    def peakmem_save_overview_to_geotiff(self):\n        \"\"\"Check peak memory usage of the generation and saving of overview.\"\"\"\n        self.save_overview_as_geotiff()\n\n    def setup(self):\n        \"\"\"Set up the benchmarks.\"\"\"\n        import satpy\n        self.data_files = get_filenames(self.subdir)\n        satpy.CHUNK_SIZE = 2048\n\n    def setup_cache(self):\n        \"\"\"Fetch the data files.\"\"\"\n        try:\n            from satpy.demo import download_seviri_hrit_20180228_1500\n            download_seviri_hrit_20180228_1500()\n        except ImportError:\n            assert len(get_filenames(self.subdir)) == 114\n        download_rsr()\n        download_luts(aerosol_type='rayleigh_only')", "name": "seviri_hrit_benchmarks.SEVIRIHRIT.peakmem_save_overview_to_geotiff", "param_names": [], "params": [], "setup_cache_key": "/home/mraspaud/src/satpy/benchmarks/seviri_hrit_benchmarks.py:36", "timeout": 600, "type": "peakmemory", "unit": "bytes", "version": "0233bf53195077ff9668cb851859d3e65748eb1e1aac0c8bf2291881c6e46cec"}, "seviri_hrit_benchmarks.SEVIRIHRIT.time_load_one_channel": {"code": "class SEVIRIHRIT:\n    def time_load_one_channel(self):\n        \"\"\"Time the loading of one channel.\"\"\"\n        self.compute_vis006()\n\n    def setup(self):\n        \"\"\"Set up the benchmarks.\"\"\"\n        import satpy\n        self.data_files = get_filenames(self.subdir)\n        satpy.CHUNK_SIZE = 2048\n\n    def setup_cache(self):\n        \"\"\"Fetch the data files.\"\"\"\n        try:\n            from satpy.demo import download_seviri_hrit_20180228_1500\n            download_seviri_hrit_20180228_1500()\n        except ImportError:\n            assert len(get_filenames(self.subdir)) == 114\n        download_rsr()\n        download_luts(aerosol_type='rayleigh_only')", "min_run_count": 2, "name": "seviri_hrit_benchmarks.SEVIRIHRIT.time_load_one_channel", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "setup_cache_key": "/home/mraspaud/src/satpy/benchmarks/seviri_hrit_benchmarks.py:36", "timeout": 600, "type": "time", "unit": "seconds", "version": "3eefdfd2c27c8a6d55580fa97488e7a9c0c4ce633b8a18cfb063ac7bdc2ba1d3", "warmup_time": -1}, "seviri_hrit_benchmarks.SEVIRIHRIT.time_load_overview": {"code": "class SEVIRIHRIT:\n    def time_load_overview(self):\n        \"\"\"Time the loading of the generation of overview.\"\"\"\n        self.compute_overview()\n\n    def setup(self):\n        \"\"\"Set up the benchmarks.\"\"\"\n        import satpy\n        self.data_files = get_filenames(self.subdir)\n        satpy.CHUNK_SIZE = 2048\n\n    def setup_cache(self):\n        \"\"\"Fetch the data files.\"\"\"\n        try:\n            from satpy.demo import download_seviri_hrit_20180228_1500\n            download_seviri_hrit_20180228_1500()\n        except ImportError:\n            assert len(get_filenames(self.subdir)) == 114\n        download_rsr()\n        download_luts(aerosol_type='rayleigh_only')", "min_run_count": 2, "name": "seviri_hrit_benchmarks.SEVIRIHRIT.time_load_overview", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "setup_cache_key": "/home/mraspaud/src/satpy/benchmarks/seviri_hrit_benchmarks.py:36", "timeout": 600, "type": "time", "unit": "seconds", "version": "bdff15ccc2bbf323391e7d76b6092dcbda87de3435bb5c43cb14cf03e2833a75", "warmup_time": -1}, "seviri_hrit_benchmarks.SEVIRIHRIT.time_save_overview_to_geotiff": {"code": "class SEVIRIHRIT:\n    def time_save_overview_to_geotiff(self):\n        \"\"\"Time the generation and saving of overview.\"\"\"\n        self.save_overview_as_geotiff()\n\n    def setup(self):\n        \"\"\"Set up the benchmarks.\"\"\"\n        import satpy\n        self.data_files = get_filenames(self.subdir)\n        satpy.CHUNK_SIZE = 2048\n\n    def setup_cache(self):\n        \"\"\"Fetch the data files.\"\"\"\n        try:\n            from satpy.demo import download_seviri_hrit_20180228_1500\n            download_seviri_hrit_20180228_1500()\n        except ImportError:\n            assert len(get_filenames(self.subdir)) == 114\n        download_rsr()\n        download_luts(aerosol_type='rayleigh_only')", "min_run_count": 2, "name": "seviri_hrit_benchmarks.SEVIRIHRIT.time_save_overview_to_geotiff", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "setup_cache_key": "/home/mraspaud/src/satpy/benchmarks/seviri_hrit_benchmarks.py:36", "timeout": 600, "type": "time", "unit": "seconds", "version": "1978db49b29fdb136c9e56e298aa95359d3a6bb958cfc9426769632a0fe7b2a7", "warmup_time": -1}, "viirs_sdr_benchmarks.VIIRSSDRCompositeBenchmarks.peakmem_load_composite": {"code": "class VIIRSSDRCompositeBenchmarks:\n    def peakmem_load_composite(self, name):\n        \"\"\"Check peak memory usage of the generation of a composite.\"\"\"\n        self.compute_composite(name)\n\nclass VIIRSSDRBenchmarkBase:\n    def setup(self, name):\n        \"\"\"Set up the benchmarks.\"\"\"\n        import satpy\n        self.data_files = self.get_filenames()\n        satpy.CHUNK_SIZE = 2048\n\n    def setup_cache(self):\n        \"\"\"Fetch the data files.\"\"\"\n        try:\n            from satpy.demo import get_viirs_sdr_20170128_1229\n            get_viirs_sdr_20170128_1229(\n                channels=(\"I01\", \"M03\", \"M04\", \"M05\"),\n                granules=(2, 3, 4))\n        except ImportError:\n            assert len(self.get_filenames()) == 6 * 3\n        download_rsr()\n        download_luts(aerosol_type='rayleigh_only')", "name": "viirs_sdr_benchmarks.VIIRSSDRCompositeBenchmarks.peakmem_load_composite", "param_names": ["name"], "params": [["'true_color'", "'true_color_crefl'", "'true_color_raw'"]], "setup_cache_key": "/home/mraspaud/src/satpy/benchmarks/viirs_sdr_benchmarks.py:33", "timeout": 600, "type": "peakmemory", "unit": "bytes", "version": "26d872bbcbd37e75d34dd325288f9dcb06b1d0c9c160e7c48957ccb571096a6d"}, "viirs_sdr_benchmarks.VIIRSSDRCompositeBenchmarks.peakmem_save_composite_raw_to_geotiff": {"code": "class VIIRSSDRCompositeBenchmarks:\n    def peakmem_save_composite_raw_to_geotiff(self, name):\n        \"\"\"Check peak memory usage of the generation and saving of a composite.\"\"\"\n        self.save_composite_as_geotiff(name)\n\nclass VIIRSSDRBenchmarkBase:\n    def setup(self, name):\n        \"\"\"Set up the benchmarks.\"\"\"\n        import satpy\n        self.data_files = self.get_filenames()\n        satpy.CHUNK_SIZE = 2048\n\n    def setup_cache(self):\n        \"\"\"Fetch the data files.\"\"\"\n        try:\n            from satpy.demo import get_viirs_sdr_20170128_1229\n            get_viirs_sdr_20170128_1229(\n                channels=(\"I01\", \"M03\", \"M04\", \"M05\"),\n                granules=(2, 3, 4))\n        except ImportError:\n            assert len(self.get_filenames()) == 6 * 3\n        download_rsr()\n        download_luts(aerosol_type='rayleigh_only')", "name": "viirs_sdr_benchmarks.VIIRSSDRCompositeBenchmarks.peakmem_save_composite_raw_to_geotiff", "param_names": ["name"], "params": [["'true_color'", "'true_color_crefl'", "'true_color_raw'"]], "setup_cache_key": "/home/mraspaud/src/satpy/benchmarks/viirs_sdr_benchmarks.py:33", "timeout": 600, "type": "peakmemory", "unit": "bytes", "version": "db717184d05367554e8410e2cd4a42b49eb7e9f15b01ebfb23f4474cfb75e9dc"}, "viirs_sdr_benchmarks.VIIRSSDRCompositeBenchmarks.time_load_composite": {"code": "class VIIRSSDRCompositeBenchmarks:\n    def time_load_composite(self, name):\n        \"\"\"Time the loading of the generation of a composite.\"\"\"\n        self.compute_composite(name)\n\nclass VIIRSSDRBenchmarkBase:\n    def setup(self, name):\n        \"\"\"Set up the benchmarks.\"\"\"\n        import satpy\n        self.data_files = self.get_filenames()\n        satpy.CHUNK_SIZE = 2048\n\n    def setup_cache(self):\n        \"\"\"Fetch the data files.\"\"\"\n        try:\n            from satpy.demo import get_viirs_sdr_20170128_1229\n            get_viirs_sdr_20170128_1229(\n                channels=(\"I01\", \"M03\", \"M04\", \"M05\"),\n                granules=(2, 3, 4))\n        except ImportError:\n            assert len(self.get_filenames()) == 6 * 3\n        download_rsr()\n        download_luts(aerosol_type='rayleigh_only')", "min_run_count": 2, "name": "viirs_sdr_benchmarks.VIIRSSDRCompositeBenchmarks.time_load_composite", "number": 0, "param_names": ["name"], "params": [["'true_color'", "'true_color_crefl'", "'true_color_raw'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "setup_cache_key": "/home/mraspaud/src/satpy/benchmarks/viirs_sdr_benchmarks.py:33", "timeout": 600, "type": "time", "unit": "seconds", "version": "364a39066b5083dc99dd97633520d0800a87327cdc35763faffea88178006f64", "warmup_time": -1}, "viirs_sdr_benchmarks.VIIRSSDRCompositeBenchmarks.time_save_composite_to_geotiff": {"code": "class VIIRSSDRCompositeBenchmarks:\n    def time_save_composite_to_geotiff(self, name):\n        \"\"\"Time the generation and saving of a composite.\"\"\"\n        self.save_composite_as_geotiff(name)\n\nclass VIIRSSDRBenchmarkBase:\n    def setup(self, name):\n        \"\"\"Set up the benchmarks.\"\"\"\n        import satpy\n        self.data_files = self.get_filenames()\n        satpy.CHUNK_SIZE = 2048\n\n    def setup_cache(self):\n        \"\"\"Fetch the data files.\"\"\"\n        try:\n            from satpy.demo import get_viirs_sdr_20170128_1229\n            get_viirs_sdr_20170128_1229(\n                channels=(\"I01\", \"M03\", \"M04\", \"M05\"),\n                granules=(2, 3, 4))\n        except ImportError:\n            assert len(self.get_filenames()) == 6 * 3\n        download_rsr()\n        download_luts(aerosol_type='rayleigh_only')", "min_run_count": 2, "name": "viirs_sdr_benchmarks.VIIRSSDRCompositeBenchmarks.time_save_composite_to_geotiff", "number": 0, "param_names": ["name"], "params": [["'true_color'", "'true_color_crefl'", "'true_color_raw'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "setup_cache_key": "/home/mraspaud/src/satpy/benchmarks/viirs_sdr_benchmarks.py:33", "timeout": 600, "type": "time", "unit": "seconds", "version": "7e5dbf970d8aa26beaa334f48850ee5c5d728db6097e392a547b8fc28032696e", "warmup_time": -1}, "viirs_sdr_benchmarks.VIIRSSDRReaderBenchmarks.peakmem_load_one_channel": {"code": "class VIIRSSDRReaderBenchmarks:\n    def peakmem_load_one_channel(self, name):\n        \"\"\"Check peak memory usage of loading one channel.\"\"\"\n        self.compute_product(name)\n\nclass VIIRSSDRBenchmarkBase:\n    def setup(self, name):\n        \"\"\"Set up the benchmarks.\"\"\"\n        import satpy\n        self.data_files = self.get_filenames()\n        satpy.CHUNK_SIZE = 2048\n\n    def setup_cache(self):\n        \"\"\"Fetch the data files.\"\"\"\n        try:\n            from satpy.demo import get_viirs_sdr_20170128_1229\n            get_viirs_sdr_20170128_1229(\n                channels=(\"I01\", \"M03\", \"M04\", \"M05\"),\n                granules=(2, 3, 4))\n        except ImportError:\n            assert len(self.get_filenames()) == 6 * 3\n        download_rsr()\n        download_luts(aerosol_type='rayleigh_only')", "name": "viirs_sdr_benchmarks.VIIRSSDRReaderBenchmarks.peakmem_load_one_channel", "param_names": ["name"], "params": [["'I01'", "'M03'"]], "setup_cache_key": "/home/mraspaud/src/satpy/benchmarks/viirs_sdr_benchmarks.py:33", "timeout": 600, "type": "peakmemory", "unit": "bytes", "version": "b1091adc9d4ce58a6b5a391cbefe07b4c6ce8d2b37f639d855907fa7d81e62a7"}, "viirs_sdr_benchmarks.VIIRSSDRReaderBenchmarks.time_load_one_channel": {"code": "class VIIRSSDRReaderBenchmarks:\n    def time_load_one_channel(self, name):\n        \"\"\"Time the loading of one channel.\"\"\"\n        self.compute_product(name)\n\nclass VIIRSSDRBenchmarkBase:\n    def setup(self, name):\n        \"\"\"Set up the benchmarks.\"\"\"\n        import satpy\n        self.data_files = self.get_filenames()\n        satpy.CHUNK_SIZE = 2048\n\n    def setup_cache(self):\n        \"\"\"Fetch the data files.\"\"\"\n        try:\n            from satpy.demo import get_viirs_sdr_20170128_1229\n            get_viirs_sdr_20170128_1229(\n                channels=(\"I01\", \"M03\", \"M04\", \"M05\"),\n                granules=(2, 3, 4))\n        except ImportError:\n            assert len(self.get_filenames()) == 6 * 3\n        download_rsr()\n        download_luts(aerosol_type='rayleigh_only')", "min_run_count": 2, "name": "viirs_sdr_benchmarks.VIIRSSDRReaderBenchmarks.time_load_one_channel", "number": 0, "param_names": ["name"], "params": [["'I01'", "'M03'"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "setup_cache_key": "/home/mraspaud/src/satpy/benchmarks/viirs_sdr_benchmarks.py:33", "timeout": 600, "type": "time", "unit": "seconds", "version": "33e3455810feb27aa1ff48299c5ef4300b274f5eac63499d16e59e325147421b", "warmup_time": -1}}, "machines": {"miles.pytroll.ewc": {"arch": "x86_64", "cpu": "Intel(R) Xeon(R) Gold 6161 CPU @ 2.20GHz", "machine": "miles.pytroll.ewc", "num_cpu": "8", "os": "Linux 4.15.0-65-generic", "ram": "16GB", "version": 1}}, "tags": {"v0.10.0": 4105, "v0.11.0": 4331, "v0.11.1": 4334, "v0.11.2": 4475, "v0.12.0": 4540, "v0.13.0": 4696, "v0.14.0": 4848, "v0.14.1": 4874, "v0.14.2": 4922, "v0.15.0": 5035, "v0.15.1": 5040, "v0.15.2": 5172, "v0.16.0": 5437, "v0.16.1": 5553, "v0.17.0": 5831, "v0.17.1": 5862, "v0.18.0": 6048, "v0.18.1": 6055, "v0.19.0": 6368, "v0.19.1": 6420, "v0.2.0": 1687, "v0.2.1": 1756, "v0.20.0": 6583, "v0.21.0": 6781, "v0.22.0": 7171, "v0.23.0": 7698, "v0.24.0": 7938, "v0.25.0": 8248, "v0.25.1": 8259, "v0.26.0": 8598, "v0.27.0": 8687, "v0.28.0": 8790, "v0.28.1": 8817, "v0.29.0": 8931, "v0.3.0": 1772, "v0.3.1": 1814, "v0.4.0": 1899, "v0.4.1": 1906, "v0.4.2": 1946, "v0.4.3": 1962, "v0.5.0": 1980, "v0.6.0": 2088, "v0.6.1": 2118, "v0.6.2": 2144, "v0.7.0": 2174, "v0.7.1": 2211, "v0.7.2": 2281, "v0.7.3": 2373, "v0.7.4": 2391, "v0.7.5": 2492, "v0.7.6": 2543, "v0.7.7": 2567, "v0.7.8": 2602, "v0.8.0": 2609, "v0.8.1": 2650, "v0.8.2": 2772, "v0.8.3": 3002, "v0.8.4": 3037, "v0.9.0": 3488, "v0.9.0a0": 2965, "v0.9.0a1": 3052, "v0.9.0a3": 3242, "v0.9.0b0": 3450, "v0.9.1": 3602, "v0.9.2": 3686, "v0.9.3": 3729, "v0.9.4": 3851}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}